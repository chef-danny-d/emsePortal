{"version":3,"sources":["../../../server/routes/api/course.js"],"names":["course","express","Router","get","req","res","next","Course","find","then","data","status","end","json","conf","catch","console","log","err","params","courseNumber","length","courseNum","identifier","id","findById"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;AADA,IAAMA,SAAUC,kBAAQC,MAAR,EAAhB;;;AAGAF,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChCC,qBAAOC,IAAP,GACKC,IADL,CACU,gBAAQ;AACV,YAAI,CAACC,IAAL,EAAU;AACN,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,GAAvB;AACH,SAFD,MAGI;AACAP,gBAAIM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,sBAAM,SADW;AAEjBJ,sBAAMA;AAFW,aAArB;AAIH;AACJ,KAXL,EAYKK,KAZL,CAYW,eAAO;AACVC,gBAAQC,GAAR,CAAYC,GAAZ;AACH,KAdL;AAeH,CAhBD;;AAkBAlB,OAAOG,GAAP,CAAW,gBAAX,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,QAAIF,IAAIe,MAAJ,CAAWC,YAAX,CAAwBC,MAAxB,GAAiC,CAArC,EAAuC;AACnCf;AACH;AACD,QAAMgB,YAAYlB,IAAIe,MAAJ,CAAWC,YAA7B;AACAb,qBAAOC,IAAP,CAAY;AACRY,sBAAcE;AADN,KAAZ,EAGKb,IAHL,CAGU,gBAAQ;AACV,YAAI,CAACC,IAAL,EAAU;AACN,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,GAAvB;AACH,SAFD,MAGI;AACAP,gBAAIM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,sBAAM,SADW;AAEjBJ,sBAAMA;AAFW,aAArB;AAIH;AACJ,KAbL,EAcKK,KAdL,CAcW,eAAO;AACVC,gBAAQC,GAAR,CAAYC,GAAZ;AACH,KAhBL;AAiBH,CAtBD;;AAwBAlB,OAAOG,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,QAAMiB,aAAanB,IAAIe,MAAJ,CAAWK,EAA9B;AACAjB,qBAAOkB,QAAP,CAAgBF,UAAhB,EACKd,IADL,CACU,gBAAQ;AACV,YAAI,CAACC,IAAL,EAAU;AACN,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,GAAvB;AACH,SAFD,MAGI;AACAP,gBAAIM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACjBC,sBAAM,SADW;AAEjBJ,sBAAMA;AAFW,aAArB;AAIH;AACJ,KAXL,EAYKK,KAZL,CAYW,eAAO;AACVC,gBAAQC,GAAR,CAAYC,GAAZ;AACH,KAdL;AAeH,CAjBD;;QAqBSlB,M,GAAAA,M","file":"course.js","sourcesContent":["import express from 'express'\nconst course =  express.Router()\nimport Course from '../../models/Course'\n\ncourse.get('/', (req, res, next) => {\n    Course.find()\n        .then(data => {\n            if (!data){\n                return res.status(404).end\n            }\n            else{\n                res.status(200).json({\n                    conf: 'success',\n                    data: data\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n})\n\ncourse.get('/:courseNumber', (req, res, next) => {\n    if (req.params.courseNumber.length > 3){\n        next()\n    }\n    const courseNum = req.params.courseNumber\n    Course.find({\n        courseNumber: courseNum\n    })\n        .then(data => {\n            if (!data){\n                return res.status(404).end\n            }\n            else{\n                res.status(200).json({\n                    conf: 'success',\n                    data: data\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n})\n\ncourse.get('/:id', (req, res, next) => {\n    const identifier = req.params.id\n    Course.findById(identifier)\n        .then(data => {\n            if (!data){\n                return res.status(404).end\n            }\n            else{\n                res.status(200).json({\n                    conf: 'success',\n                    data: data\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n})\n\n\n\nexport { course }\n"]}