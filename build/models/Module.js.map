{"version":3,"sources":["../../server/models/Module.js"],"names":["ObjectId","mongoose","Schema","Types","Module","parentCourseName","type","String","trim","default","parentCourseNumber","Number","moduleNumber","moduleName","description","duration","cdLink","numSlides","author","difficulty","done","Boolean","continue","rating","keywords","assignment","numberOfAssignments","listOfAssignments","name","id","unique","title","topics","Array","numberOfQuestions","PassingGrade","question","number","problem","correctAnswer","response","point","visual","resource","link","relates","value","retake","due","Date","allowedTime","preTest","postTest","model"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAAvC;;AAEA,IAAMI,SAAS,IAAIH,mBAASC,MAAb,CAAoB;AAC/BG,sBAAkB;AACdC,cAAMC,MADQ;AAEdC,cAAM,IAFQ;AAGdC,iBAAS;AAHK,KADa;AAM/BC,wBAAoB;AAChBJ,cAAMK,MADU;AAEhBF,iBAAS;AAFO,KANW;AAU/BG,kBAAc;AACVN,cAAMK,MADI;AAEVF,iBAAS;AAFC,KAViB;AAc/BI,gBAAY;AACRP,cAAMC,MADE;AAERC,cAAM,IAFE;AAGRC,iBAAS;AAHD,KAdmB;AAmB/BK,iBAAa;AACTR,cAAMC,MADG;AAETE,iBAAS;AAFA,KAnBkB;AAuB/BM,cAAU;AACNT,cAAMK,MADA;AAENF,iBAAS;AAFH,KAvBqB;AA2B/BO,YAAQ;AACJV,cAAMC,MADF;AAEJC,cAAM,IAFF;AAGJC,iBAAS;AAHL,KA3BuB;AAgC/BQ,eAAW;AACPX,cAAMK,MADC;AAEPH,cAAM,IAFC;AAGPC,iBAAS;AAHF,KAhCoB;AAqC/BS,YAAQ;AACJZ,cAAMC,MADF;AAEJC,cAAM,IAFF;AAGJC,iBAAS;AAHL,KArCuB;AA0C/BU,gBAAY;AACRb,cAAMK,MADE;AAERF,iBAAS;AAFD,KA1CmB;AA8C/BW,UAAM;AACFd,cAAMe;AADJ,KA9CyB;AAiD/BC,cAAU;AACNhB,cAAMe;AADA,KAjDqB;AAoD/BE,YAAQ,CACJZ,MADI,CApDuB;AAuD/Ba,cAAU,CACNjB,MADM,CAvDqB;AA0D/BkB,gBAAY;AACR;AACAnB,cAAMe;AAFE,KA1DmB;AA8D/BK,yBAAqB;AACjB;AACApB,cAAMK;AAFW,KA9DU;AAkE/BgB,uBAAmB;AACf;AACA;AACI;AACAC,cAAMrB,MAFV;AAGIsB,YAAI;AACAvB,kBAAMC,MADN;AAEAuB,oBAAQ,IAFR;AAGAF,kBAAM5B;AAHN,SAHR;AAQI+B,eAAOxB,MARX;AASIO,qBAAaP,MATjB;AAUIyB,gBAAQ;AACJ;AACAC,aAFI,CAVZ;AAcIC,2BAAmBvB,MAdvB;AAeIwB,sBAAc;AACV7B,kBAAMK,MADI;AAEVF,qBAAS;AAFC,SAflB;AAmBI2B,kBAAS,CAAC;AACN;AACAC,oBAAQ1B,MAFF;AAGNoB,mBAAOxB,MAHD;AAIN+B,qBAAS/B,MAJH;AAKNgC,2BAAehC,MALT;AAMNiC,sBAAUjC,MANJ;AAONkC,mBAAO9B,MAPD;AAQN+B,oBAAQrB,OARF;AASNsB,sBAAU,CAAC;AACP;AACAC,sBAAMrC,MAFC;AAGPqB,sBAAMrB;AAHC,aAAD,CATJ;AAcNsC,qBAAS;AACL;AACAvC,sBAAMC,MAFD;AAGLuC,uBAAO9C;AAHF;AAdH,SAAD,CAnBb;AAuCI+C,gBAAQ1B,OAvCZ;AAwCI2B,aAAKC,IAxCT;AAyCIC,qBAAavC;AAzCjB,KAFe,CAlEY;AAgH/BwC,aAAQ;AACJ7C,cAAMe;AADF,KAhHuB;AAmH/B+B,cAAU;AACN9C,cAAMe;AADA;;AAnHqB,CAApB,CAAf;;kBAyHepB,mBAASoD,KAAT,CAAe,QAAf,EAAyBjD,MAAzB,C","file":"Module.js","sourcesContent":["import mongoose from 'mongoose'\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\nconst Module = new mongoose.Schema({\n    parentCourseName: {\n        type: String,\n        trim: true,\n        default: '',\n    },\n    parentCourseNumber: {\n        type: Number,\n        default: 0,\n    },\n    moduleNumber: {\n        type: Number,\n        default: 0,\n    },\n    moduleName: {\n        type: String,\n        trim: true,\n        default: '',\n    },\n    description: {\n        type: String,\n        default: ''\n    },\n    duration: {\n        type: Number,\n        default: 0\n    },\n    cdLink: {\n        type: String,\n        trim: true,\n        default: './'\n    },\n    numSlides: {\n        type: Number,\n        trim: true,\n        default: 0\n    },\n    author: {\n        type: String,\n        trim: true,\n        default: ''\n    },\n    difficulty: {\n        type: Number,\n        default: 0\n    },\n    done: {\n        type: Boolean\n    },\n    continue: {\n        type: Boolean\n    },\n    rating: [\n        Number\n    ],\n    keywords: [\n        String\n    ],\n    assignment: {\n        //specifies if there is an assignment for the module\n        type: Boolean\n    },\n    numberOfAssignments: {\n        //specifies the number of assignments for given module\n        type: Number\n    },\n    listOfAssignments: [\n        //contains the list of assignments\n        {\n            //one specific assignment in the array\n            name: String,\n            id: {\n                type: String,\n                unique: true,\n                name: ObjectId \n            },\n            title: String,\n            description: String,\n            topics: [ \n                //specifies the topics covered by this specific assignment\n                Array \n            ],\n            numberOfQuestions: Number,\n            PassingGrade: { \n                type: Number, \n                default: 0\n            },\n            question:[{\n                //one specific question in the assignment\n                number: Number,\n                title: String,\n                problem: String,\n                correctAnswer: String,\n                response: String,\n                point: Number,\n                visual: Boolean,\n                resource: [{\n                    //available resource for specific question\n                    link: String,\n                    name: String\n                }],\n                relates: {\n                    //specifies the UUID of the module that has this question's help/answer\n                    type: String,\n                    value: ObjectId \n                }\n            }],\n            retake: Boolean,\n            due: Date,\n            allowedTime: Number,\n        }\n    ],\n    preTest:{\n        type: Boolean\n    },\n    postTest: {\n        type: Boolean\n    },\n\n})\n\nexport default mongoose.model('Module', Module)"]}